{"version":3,"sources":["component/MoviesContext/index.tsx","component/Header/index.tsx","component/MoviePage/index.tsx","component/HomePage/index.tsx","App.tsx","index.tsx"],"names":["MoviesContext","createContext","Header","context","useContext","his","useHistory","useAutocomplete","id","options","getOptionLabel","option","Array","isArray","name","filterOptions","inputValue","filter","value","map","v","toLowerCase","includes","getInputProps","getRootProps","getInputLabelProps","getListboxProps","getOptionProps","groupedOptions","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","aria-label","onClick","push","mr","className","length","index","to","style","textDecoration","join","MoviePage","movie","useParams","info","parseInt","console","log","localStorage","setItem","width","margin","height","padding","marginBottom","background","Typography","variant","Director","noWrap","maxWidth","overflow","textOverflow","Actor","display","Rating","parseFloat","precision","readOnly","View","MovieCard","history","Card","minWidth","CardContent","component","mb","CardActions","Button","HomePage","React","lastView","getItem","Similar","The_loai","some","sort","a","b","Set","undefined","justifyContent","flexWrap","App","Provider","data","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.feba72f7.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nexport interface MovieInfo{\r\n\tname:string;\r\n\tThe_loai:string|string[],\r\n\tView:number,\r\n\tActor:string[],\r\n\tDirector:string[]|string,\r\n\tYear:string,\r\n\tTrang_Thai:string,\r\n\tRating:string,\r\n\tid:Number;\r\n}\r\nexport type MoviesInfo = MovieInfo[];\r\nexport const MoviesContext = createContext([] as MoviesInfo);\r\n\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  AppBar,\r\n  IconButton,\r\n  Toolbar,\r\n  useAutocomplete,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport MovieIcon from \"@mui/icons-material/Movie\";\r\nimport \"./style.scss\";\r\nimport {MoviesContext,MoviesInfo} from \"../MoviesContext\";\r\nimport {Link,useHistory} from \"react-router-dom\";\r\n\r\nexport function Header() {\r\n  const context = useContext(MoviesContext);\r\n  const his = useHistory();\r\n  const {\r\n    getRootProps,\r\n    getInputLabelProps,\r\n    getInputProps,\r\n    getListboxProps,\r\n    getOptionProps,\r\n    groupedOptions,\r\n  } = useAutocomplete({\r\n    id: 'use-autocomplete-demo',\r\n    options: context,\r\n    getOptionLabel: (option) => {\r\n      if(Array.isArray(option.name))\r\n        return option.name[0];\r\n      return option.name;\r\n    },\r\n    filterOptions: (options,{ inputValue })=>\r\n      options.filter(value => {\r\n        if(Array.isArray(value.name))\r\n          return value.name.map(v => v.toLowerCase().includes(inputValue.toLowerCase())).includes(true);\r\n        return value.name.toLowerCase().includes(inputValue.toLowerCase());\r\n      })\r\n  });\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={()=>{his.push(\"/\")}}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MovieIcon/>\r\n          </IconButton>\r\n\t  <div className=\"SearchBox\">\r\n\t\t<IconButton\r\n\t\tsize=\"medium\"\r\n\t\tedge=\"start\"\r\n\t\tcolor=\"primary\"\r\n\t\taria-label=\"menu\"\r\n\t\t>\r\n\t\t<SearchIcon/>\r\n\t\t</IconButton>\r\n\t\t<input {...getInputProps()} className=\"SearchInput\" />\r\n    {groupedOptions.length > 0 ? (\r\n    <ul {...getListboxProps()} className=\"suggest\">\r\n      {(groupedOptions as MoviesInfo).map((option, index) => (\r\n          <Link key={index} to={`/${option.id}`} style={{textDecoration:\"none\",color:\"inherit\"}}>\r\n        <li key={index} className=\"item\" {...getOptionProps({ option, index })}>\r\n            {Array.isArray(option.name)?option.name.join(\" | \"):option.name}\r\n          </li>\r\n           </Link>\r\n      ))}\r\n    </ul>\r\n  ) : null}\r\n\t  </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    </Box>\r\n  );\r\n}\r\n","import { Typography, Rating } from \"@mui/material\";\r\nimport React,{useContext } from \"react\";\r\nimport {  useParams } from \"react-router\";\r\nimport { MovieInfo, MoviesContext } from \"../MoviesContext\";\r\ninterface ParamTypes {\r\n\tid: string;\r\n}\r\nexport default function MoviePage({movie}:{movie:MovieInfo}){\r\n\tconst context = useContext(MoviesContext);\r\n\tconst {id} = useParams<ParamTypes>();\r\n\tconst info = context[parseInt(id as string)];\r\n\tconsole.log();\r\n\tlocalStorage.setItem(\"lastView\",id);\r\n\treturn <div style={{\r\n\t\t\r\n\t}}>\r\n\t\t<div style={{\r\n\t\t\twidth: \"700px\",\r\n\t\t\tmargin:\"auto\",\r\n\t\t\theight: \"600px\",\r\n\t\t\tpadding: 10,\r\n\t\t}}>\r\n\t\t\t<div style={{\r\n\t\t\t\twidth: \"600px\",\r\n\t\t\t\theight: \"300px\",\r\n\t\t\t\tmargin: \"0 auto\",\r\n\t\t\t\tmarginBottom: \"30px\",\r\n\t\t\t\tbackground: \"gray\"\r\n\t\t\t}}></div>\r\n\t\t\t<Typography variant=\"h5\">{Array.isArray(info.name)?info.name[0]:info.name}</Typography>\r\n\t\t\t<Typography variant=\"h6\">Đạo diễn: {Array.isArray(info.Director)?info.Director.join(', '):info.Director}</Typography>\r\n\t\t\t<Typography variant=\"h6\" noWrap style={{maxWidth:\"500px\",overflow:\"hidden\",textOverflow:\"ellipsis\"}}>Diễn viên: {Array.isArray(info.Actor)?info.Actor.join(', '):info.Actor}</Typography>\r\n\t\t\t<Typography variant=\"h6\" display=\"inline\" >Đánh Giá </Typography>\r\n\t\t\t<Rating value={info.Rating ===\"N/A\"?0:parseFloat(info.Rating)/2} precision={0.5} readOnly></Rating>\r\n\t\t\t<Typography variant=\"h6\" display=\"inline\" > - Lượt xem: {info.View}</Typography>\t\t\r\n\t\t</div>\r\n\t</div>;\r\n}","import { Button, Card, CardActions,CardContent,Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { MoviesContext,MovieInfo } from '../MoviesContext';\r\nimport { useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction MovieCard({movie,...props}:{movie:MovieInfo}){\r\n\tconst history = useHistory();\r\n\treturn <Card sx={{ maxWidth: 275,minWidth: 250,margin:\"5px\" }}>\r\n\t<CardContent>\r\n\t  <Typography variant=\"h5\" component=\"div\">\r\n\t \t{Array.isArray(movie.name)?movie.name[0]:movie.name}\r\n\t  </Typography>\r\n\t  <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t    {Array.isArray(movie.Director)?movie.Director[0]:movie.Director}\r\n\t  </Typography>\r\n\t</CardContent>\r\n\t<CardActions>\r\n\t  <Button size=\"small\" onClick={()=> history.push(''+movie.id)}>Watch Movie</Button>\r\n\t</CardActions>\r\n      </Card>;\r\n}\r\n\r\n\r\n\r\nexport default function HomePage()\r\n{\r\n\tconst context = React.useContext(MoviesContext);\r\n\tconst lastView = parseInt(localStorage.getItem(\"lastView\") as string);\r\n\tconst Similar = localStorage.getItem(\"lastView\")?context.filter(value => \r\n\t\t(value.The_loai as string[]).some(v => (context[lastView].The_loai as string[]).includes(v))\r\n\t).sort((a,b)=> {\r\n\t\tconst aCount = [...new Set([...a.The_loai as string[],...context[lastView].The_loai as string[]])].length\r\n\t\tconst bCount = [...new Set([...b.The_loai as string[],...context[lastView].The_loai as string[]])].length\r\n\t\treturn aCount-bCount;\r\n\t}):undefined;\r\n\tconsole.log(Similar);\r\n\treturn (<>\r\n\t\t<div style={{display:\"flex\",justifyContent:\"center\",padding:50,flexWrap:\"wrap\",maxWidth: \"100%\"}}>\r\n\t\t{Similar && Similar.map((value,index) =>\r\n\r\n\t\t\t\t<MovieCard key ={index} movie={value}/>\r\n\t\t)}\r\n\t\t\r\n\t\t</div>\r\n\t</>);\r\n}","import React from 'react';\nimport { Header } from './component/Header';\nimport data from './1911067387_NguyenTranTuanTai.json';\nimport {MoviesContext,MoviesInfo} from './component/MoviesContext';\nimport {BrowserRouter, HashRouter, Route, Switch} from \"react-router-dom\";\nimport MoviePage from './component/MoviePage';\nimport HomePage from './component/HomePage';\n\nfunction App() {\n\n  return (\n    <MoviesContext.Provider value={data as MoviesInfo}>\n      <HashRouter>\n      <Header/>\n      <Switch>\n        <Route path=\"/:id\" component={MoviePage}/>\n        <Route exact path=\"/\" component={HomePage}/>\n      </Switch>\n      </HashRouter>\n    </MoviesContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}